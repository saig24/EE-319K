


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/4/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   42 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   43 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   44 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   45 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   46 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   47 00000000                 IMPORT           TExaS_Init
   48 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   49 00000000                 THUMB
   50 00000000                 EXPORT           Start
   51 00000000         Start
   52 00000000         ; TExaS_Init sets bus clock at 80 MHz
   53 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   54 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   55 00000006 492A            LDR              R1, =SYSCTL_RCGCGPIO_R ;Activat
                                                            e Port F Clock
   56 00000008 6808            LDR              R0, [R1]
   57 0000000A F040 0030       ORR              R0, R0, #0x30
   58 0000000E 6008            STR              R0, [R1]    ;Clock Initialize T
                                                            ime
   59 00000010 BF00            NOP
   60 00000012 BF00            NOP
   61 00000014 4927            LDR              R1, =GPIO_PORTF_LOCK_R ;Unlock 
                                                            PortF Register



ARM Macro Assembler    Page 3 


   62 00000016 4828            LDR              R0, =0x4C4F434B ;MAYBE YES OR N
                                                            O NOT SURE WHY
   63 00000018 6008            STR              R0, [R1]
   64 0000001A 4928            LDR              R1, =GPIO_PORTF_CR_R
   65 0000001C F04F 00FF       MOV              R0, #0xFF
   66 00000020 6008            STR              R0, [R1]
   67 00000022 4927            LDR              R1, =GPIO_PORTF_AMSEL_R 
                                                            ;Disable Analog
   68 00000024 F04F 0000       MOV              R0, #0
   69 00000028 6008            STR              R0, [R1]
   70 0000002A 4926            LDR              R1, =GPIO_PORTF_PCTL_R 
                                                            ;Start GPIO
   71 0000002C F04F 0000       MOV              R0, #0x00000000
   72 00000030 6008            STR              R0, [R1]
   73 00000032 4925            LDR              R1, =GPIO_PORTF_DIR_R ;Set Dire
                                                            ction Register
   74 00000034 F04F 0000       MOV              R0,#0x00    ;All Input 
   75 00000038 6008            STR              R0, [R1]
   76 0000003A 4924            LDR              R1, =GPIO_PORTF_AFSEL_R 
                                                            ;Initialize PortF
   77 0000003C F04F 0000       MOV              R0, #0
   78 00000040 6008            STR              R0, [R1]
   79 00000042 4923            LDR              R1, =GPIO_PORTF_PUR_R 
                                                            ;Pull Up Resistors
   80 00000044 F04F 0011       MOV              R0, #0x11
   81 00000048 6008            STR              R0, [R1]
   82 0000004A 4922            LDR              R1, =GPIO_PORTF_DEN_R 
                                                            ;Enable PortF
   83 0000004C F04F 00FF       MOV              R0, #0xFF
   84 00000050 6008            STR              R0, [R1]
   85 00000052 4921            LDR              R1, =GPIO_PORTE_DEN_R 
                                                            ;Enable PortE
   86 00000054 F04F 00FF       MOV              R0, #0xFF
   87 00000058 6008            STR              R0, [R1]
   88 0000005A 4920            LDR              R1, =GPIO_PORTE_DIR_R ;Set Dire
                                                            ction Register
   89 0000005C F04F 0001       MOV              R0,#0x01    ;0 Output, 1 Input
   90 00000060 6008            STR              R0, [R1]
   91 00000062         
   92 00000062 F04F 040A       MOV              R4, #10     ;R4 = Time On 
   93 00000066 F04F 050A       MOV              R5, #10     ;R5 = TimeOff
   94 0000006A         loop
   95 0000006A F000 F80D       BL               buttonCheck
   96 0000006E F000 0000       AND              R0, #0x00   ;Clearing R0
   97 00000072 F104 0100       ADD              R1, R4, #0  ;Loading Delay valu
                                                            es 
   98 00000076 F000 F808       BL               LEDDelay
   99 0000007A F000 0000       AND              R0, #0x00   ;Clearing R0
  100 0000007E F105 0200       ADD              R2, R5, #0  ;Loading Delay valu
                                                            es 
  101 00000082 F000 F802       BL               LEDDelay
  102 00000086 E7F0            B                loop
  103 00000088         
  104 00000088         buttonCheck
  105 00000088 4770            BX               LR
  106 0000008A         
  107 0000008A         LEDDelay
  108 0000008A 4B15            LDR              R3, =GPIO_PORTE_DATA_R ;Load Po
                                                            rtF Data Address



ARM Macro Assembler    Page 4 


  109 0000008C 681E            LDR              R6, [R3]    ;Loading PortF Data
                                                              
  110 0000008E F086 0601       EOR              R6, #0x01   ;Toggling LED bit 
  111 00000092 601E            STR              R6, [R3]    ;Storing Result bac
                                                            k in PortF      
  112 00000094 F04F 0002       MOV              R0, #2
  113 00000098 E000            B                delay       ;delaying
  114 0000009A 4770            BX               LR
  115 0000009C         
  116 0000009C         delay
  117 0000009C         ;LDR R1, [R3]
  118 0000009C         ;AND R1, #0x2
  119 0000009C         ;CMP R1, #2
  120 0000009C         ;BEQ buttonPushed
  121 0000009C 3801            SUBS             R0, #1
  122 0000009E D1FD            BNE              delay
  123 000000A0 F04F 0002       MOV              R0, #2
  124 000000A4 3901            SUBS             R1, #1
  125 000000A6 D1F9            BNE              delay
  126 000000A8 4770            BX               LR
  127 000000AA         
  128 000000AA         buttonPushed
  129 000000AA F106 0601       ADD              R6, #1
  130 000000AE 4770            BX               LR
  131 000000B0         
  132 000000B0                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  133 000000B0                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              4002451C 
              40024400 
              400243FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: .text unused
LEDDelay 0000008A

Symbol: LEDDelay
   Definitions
      At line 107 in file main.s
   Uses
      At line 98 in file main.s
      At line 101 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 51 in file main.s
   Uses
      At line 50 in file main.s
Comment: Start used once
buttonCheck 00000088

Symbol: buttonCheck
   Definitions
      At line 104 in file main.s
   Uses
      At line 95 in file main.s
Comment: buttonCheck used once
buttonPushed 000000AA

Symbol: buttonPushed
   Definitions
      At line 128 in file main.s
   Uses
      None
Comment: buttonPushed unused
delay 0000009C

Symbol: delay
   Definitions
      At line 116 in file main.s
   Uses
      At line 113 in file main.s
      At line 122 in file main.s
      At line 125 in file main.s

loop 0000006A

Symbol: loop
   Definitions
      At line 94 in file main.s
   Uses
      At line 102 in file main.s
Comment: loop used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 108 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 88 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 67 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 42 in file main.s
   Uses
      At line 64 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 82 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 61 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 70 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 79 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 46 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 55 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 47 in file main.s
   Uses
      At line 53 in file main.s
Comment: TExaS_Init used once
1 symbol
355 symbols in table
