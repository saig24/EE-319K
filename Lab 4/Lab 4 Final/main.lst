


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/26/2017
    4 00000000         ; Last Modified: 2/14/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ;   Repeat the functionality from Lab2-3 but now we want
                        you to 
    8 00000000         ;   insert debugging instruments which gather data (stat
                       e and timing)
    9 00000000         ;   to verify that the system is functioning as expected
                       .
   10 00000000         ; Hardware connections (External: One button and one LED
                       )
   11 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
   12 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard)
   13 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   14 00000000         ; Instrumentation data to be gathered is as follows:
   15 00000000         ; After Button(PE1) press collect one state and time ent
                       ry. 
   16 00000000         ; After Buttin(PE1) release, collect 7 state and
   17 00000000         ; time entries on each change in state of the LED(PE0): 
                       
   18 00000000         ; An entry is one 8-bit entry in the Data Buffer and one
                        
   19 00000000         ; 32-bit entry in the Time Buffer
   20 00000000         ;  The Data Buffer entry (byte) content has:
   21 00000000         ;    Lower nibble is state of LED (PE0)
   22 00000000         ;    Higher nibble is state of Button (PE1)
   23 00000000         ;  The Time Buffer entry (32-bit) has:
   24 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   25 00000000         ; Note: The size of both buffers is 50 entries. Once you
                        fill these
   26 00000000         ;       entries you should stop collecting data
   27 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   28 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   29 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC



ARM Macro Assembler    Page 2 


   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   43 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   44 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   45 00000000         ;
   46 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   47 00000000         ;RAM AREA
   48 00000000                 AREA             DATA, ALIGN =1
   49 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Databuffer
                               SPACE            54          ;DATA ARRAY
   50 00000036 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00    Timebuffer
                               SPACE            200         ;TIME ARRAY
   51 000000FE 00 00 00 
              00       Tpt     SPACE            4           ;TIME ARRAY POINTER
                                                            
   52 00000102 00 00 00 
              00       Dpt     SPACE            4           ;DATA ARRAY POINTER
                                                            
   53 00000106         
   54 00000106                 IMPORT           TExaS_Init
   55 00000106                 IMPORT           SysTick_Init
   56 00000106                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   57 00000000                 THUMB
   58 00000000         ;EXPORT  SysTick_Init
   59 00000000                 EXPORT           Start
   60 00000000         Start
   61 00000000         ; TExaS_Init sets bus clock at 80 MHz
   62 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   63 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   64 00000006 4976            LDR              R1, =SYSCTL_RCGCGPIO_R ;Activat
                                                            e Port F/E Clock
   65 00000008 6808            LDR              R0, [R1]
   66 0000000A F040 0030       ORR              R0, R0, #0x30
   67 0000000E 6008            STR              R0, [R1]    ;Clock Initialize T
                                                            ime
   68 00000010 BF00            NOP
   69 00000012 BF00            NOP
   70 00000014 4973            LDR              R1, =GPIO_PORTF_LOCK_R ;Unlock 
                                                            PortF Register
   71 00000016 4874            LDR              R0, =0x4C4F434B ;MAYBE YES OR N
                                                            O NOT SURE WHY
   72 00000018 6008            STR              R0, [R1]
   73 0000001A 4974            LDR              R1, =GPIO_PORTF_CR_R
   74 0000001C F04F 00FF       MOV              R0, #0xFF
   75 00000020 6008            STR              R0, [R1]
   76 00000022 4973            LDR              R1, =GPIO_PORTF_AMSEL_R 
                                                            ;Disable Analog
   77 00000024 F04F 0000       MOV              R0, #0
   78 00000028 6008            STR              R0, [R1]
   79 0000002A 4972            LDR              R1, =GPIO_PORTF_DIR_R ;Set Dire
                                                            ction Register
   80 0000002C F04F 0004       MOV              R0, #0x04   ;PF2 Output 
   81 00000030 6008            STR              R0, [R1]
   82 00000032 4971            LDR              R1, =GPIO_PORTF_AFSEL_R 
                                                            ;Initialize PortF
   83 00000034 F04F 0000       MOV              R0, #0
   84 00000038 6008            STR              R0, [R1]
   85 0000003A 4970            LDR              R1, =GPIO_PORTE_AFSEL_R 
                                                            ;Initialize PortE
   86 0000003C F04F 0000       MOV              R0, #0
   87 00000040 6008            STR              R0, [R1]
   88 00000042 496F            LDR              R1, =GPIO_PORTF_PUR_R 
                                                            ;Pull Up Resistors
   89 00000044 F04F 0010       MOV              R0, #0x10



ARM Macro Assembler    Page 5 


   90 00000048 6008            STR              R0, [R1]
   91 0000004A 496E            LDR              R1, =GPIO_PORTF_DEN_R 
                                                            ;Enable PortF
   92 0000004C F04F 00FF       MOV              R0, #0xFF
   93 00000050 6008            STR              R0, [R1]
   94 00000052 496D            LDR              R1, =GPIO_PORTE_DEN_R 
                                                            ;Enable PortE
   95 00000054 F04F 00FF       MOV              R0, #0xFF
   96 00000058 6008            STR              R0, [R1]
   97 0000005A 496C            LDR              R1, =GPIO_PORTE_DIR_R ;Set Dire
                                                            ction Register
   98 0000005C F04F 0001       MOV              R0,#0x01    ;0 Output, 1 Input
   99 00000060 6008            STR              R0, [R1]
  100 00000062         ;
  101 00000062 F04F 0301       MOV              R3, #1      ; R3 CONTAINS COUNT
                                                             FOR DUTY MULTIPLIE
                                                            R
  102 00000066 F04F 0404       MOV              R4, #4      ; R4 CONTAINS COUNT
                                                             FOR LEDOFF DUTY MU
                                                            LTIPLIER
  103 0000006A F04F 0519       MOV              R5, #25     ; PUTS MULITPLE OF 
                                                            25 IN R5
  104 0000006E F04F 0C00       MOV              R12, #0
  105 00000072         ;R6 WILL CONTAIN 25*X IN LEDON
  106 00000072         ;R7 WILL CONTAIN 25*Y IN LEDOFF
  107 00000072         ;R0 AND R1 RESERVED FOR LOADING OF ADDRESS AND DATA
  108 00000072         ;
  109 00000072         ;
  110 00000072         ;
  111 00000072 F000 F861       BL               Debug_Init
  112 00000076         mainloop                             ;------------------
                                                            -------------------
                                                            -------------------
                                                            ---------
  113 00000076         
  114 00000076 F000 F833       BL               buttoncheck ;CHECKS PORTE1(BUTT
                                                            ON)
  115 0000007A         checkpoint
  116 0000007A F000 F807       BL               LEDON       ;TOGGLE LED ON
  117 0000007E F000 F88A       BL               dataEntry
  118 00000082 F000 F818       BL               LEDOFF      ;TOGGLE LED OFF
  119 00000086 F000 F886       BL               dataEntry
  120 0000008A E7F4            B                mainloop    ;REPEAT
  121 0000008C         ;
  122 0000008C         ;
  123 0000008C         ;
  124 0000008C         LEDON                                ;------------------
                                                            -------------------
                                                            -------------------
                                                            -------------
  125 0000008C 2B00            CMP              R3, #0
  126 0000008E D011            BEQ              next
  127 00000090 495F            LDR              R1, =GPIO_PORTE_DATA_R ;Load Po
                                                            rtE Data Address
  128 00000092 6808            LDR              R0, [R1]    ;Loading PortE Data
                                                              
  129 00000094 F04F 0001       MOV              R0, #0x01   ;Toggling LED PE0
  130 00000098 6008            STR              R0, [R1]    ;Storing Result bac
                                                            k in PortE



ARM Macro Assembler    Page 6 


  131 0000009A 495E            LDR              R1, =GPIO_PORTF_DATA_R ; LOAD P
                                                            ORTE DATA ADDRESS 
  132 0000009C 6808            LDR              R0, [R1]
  133 0000009E F04F 0004       MOV              R0, #0x04   ; ON
  134 000000A2 6008            STR              R0, [R1]
  135 000000A4 FB03 F605       MUL              R6, R3, R5  ; NUMBER OF MILISEC
                                                            S, R5 HAS 25, R3 HA
                                                            S NUMBER OF TIMES T
                                                            O MULTIPLY BY, PUT 
                                                            IN R6
  136 000000A8         LOOP
  137 000000A8 F644 6216       MOV              R2, #19990  ; COUNT
  138 000000AC         delay
  139 000000AC 1E52            SUBS             R2, R2, #1  ; R2 CONTAINS A NUM
                                                            BER TO GET UP TO 1M
                                                            S (16000)
  140 000000AE D1FD            BNE              delay
  141 000000B0 1E76            SUBS             R6, R6, #1  ; R6 CONTAINS NUMBE
                                                            R OF MS COUNT
  142 000000B2 D1F9            BNE              LOOP
  143 000000B4         next
  144 000000B4 4770            BX               LR
  145 000000B6         ;
  146 000000B6         ;
  147 000000B6         ;
  148 000000B6         LEDOFF                               ;------------------
                                                            -------------------
                                                            -------------------
                                                            -------
  149 000000B6 2C00            CMP              R4, #0
  150 000000B8 D011            BEQ              next1
  151 000000BA 4955            LDR              R1, =GPIO_PORTE_DATA_R ; LOAD P
                                                            ORTE DATA ADDRESS 
  152 000000BC 6808            LDR              R0, [R1]
  153 000000BE F04F 0000       MOV              R0, #0x00   ; OFF
  154 000000C2 6008            STR              R0, [R1]
  155 000000C4 4953            LDR              R1, =GPIO_PORTF_DATA_R ; LOAD P
                                                            ORTF DATA ADDRESS 
  156 000000C6 6808            LDR              R0, [R1]
  157 000000C8 F04F 0000       MOV              R0, #0x00   ; OFF
  158 000000CC 6008            STR              R0, [R1]
  159 000000CE FB04 F705       MUL              R7, R4, R5  ;# OF MILISECS, R5 
                                                            HAS 25 AND, R4 HAS 
                                                            NUMBER OF TIMES TO 
                                                            MULTIPLY BY, PUT IN
                                                             R7
  160 000000D2         LOOP1
  161 000000D2 F644 6220       MOV              R2, #20000  ; COUNT
  162 000000D6         delay1
  163 000000D6 1E52            SUBS             R2, R2, #1  ; R2 CONTAINS A NUM
                                                            BER TO GET UP TO 1M
                                                            S (16000)
  164 000000D8 D1FD            BNE              delay1
  165 000000DA 1E7F            SUBS             R7, R7, #1  ; R4 CONTAINS NUMBE
                                                            R OF OFF MS COUNT
  166 000000DC D1F9            BNE              LOOP1
  167 000000DE         next1
  168 000000DE 4770            BX               LR
  169 000000E0         ;



ARM Macro Assembler    Page 7 


  170 000000E0         ;
  171 000000E0         ;
  172 000000E0         buttoncheck                          ;------------------
                                                            -------------------
                                                            -------------------
                                                            -----
  173 000000E0 494B            LDR              R1, =GPIO_PORTE_DATA_R
  174 000000E2 6808            LDR              R0, [R1]
  175 000000E4 EA4F 0050       LSR              R0, #1
  176 000000E8 F080 0001       EOR              R0, #0x01
  177 000000EC 2800            CMP              R0, #0      ;CHECKS IF PE1 IS P
                                                            RESSED
  178 000000EE D000            BEQ              check
  179 000000F0 4770            BX               LR          ;BACK TO MAINLOOP
  180 000000F2         check
  181 000000F2 E92D 5000       PUSH             {R12, LR}   ;WHEN BUTTON IS PRE
                                                            SSED INCREASES R3 C
                                                            OUNT AND DECREASES 
                                                            R4
  182 000000F6 F04F 0C01       MOV              R12, #1     ;Setting dataEntry 
                                                            to run once after b
                                                            utton release
  183 000000FA F000 F84C       BL               dataEntry
  184 000000FE         here
  185 000000FE 4944            LDR              R1, =GPIO_PORTE_DATA_R
  186 00000100 6808            LDR              R0, [R1]
  187 00000102 EA4F 0050       LSR              R0, #1
  188 00000106 F080 0001       EOR              R0, #0x01
  189 0000010A 2800            CMP              R0, #0
  190 0000010C D104            BNE              done
  191 0000010E F7FF FFBD       BL               LEDON
  192 00000112 F7FF FFD0       BL               LEDOFF
  193 00000116 E7F2            B                here
  194 00000118         done
  195 00000118 E8BD 5000       POP              {R12, LR}
  196 0000011C F103 0301       ADD              R3, #1
  197 00000120 2B06            CMP              R3, #6      ;SEES IF BUTTON HAS
                                                             BEEN PRESSED 5 TIM
                                                            ES (6TH TIME SHOULD
                                                             SET TO
  198 00000122 D101            BNE              change2
  199 00000124 F003 0300       AND              R3, #0
  200 00000128         change2
  201 00000128 F04F 0C07       MOV              R12, #7     ;Setting dataEntry 
                                                            to run 7 times afte
                                                            r button release
  202 0000012C 1E64            SUBS             R4, R4 , #1
  203 0000012E 2C00            CMP              R4, #0
  204 00000130 D501            BPL              back        ;IF POSITIVE OR ZER
                                                            O JUMP, IF NEGATIVE
                                                             WANT TO ADD 5 TO G
                                                            ET TO 4(RESET)
  205 00000132 F104 0406       ADD              R4, #6
  206 00000136         back
  207 00000136 4770            BX               LR          ;TO MAIN LOOP
  208 00000138         ;
  209 00000138         ;
  210 00000138         ;
  211 00000138         Debug_Init                           ;------------------



ARM Macro Assembler    Page 8 


                                                            -------------------
                                                            -------------------
                                                            ---------
  212 00000138 E92D 5000       PUSH             {R12,LR}
  213 0000013C 4936            LDR              R1, =Databuffer
  214 0000013E F04F 00FF       MOV              R0, #0xFF   ; NO STATE SAVED YE
                                                            T
  215 00000142 6008            STR              R0, [R1]
  216 00000144 4935            LDR              R1, =Timebuffer
  217 00000146 F04F 30FF       MOV              R0, #0xFFFFFFFF ; NO TIMING SAV
                                                            ED YET
  218 0000014A 6008            STR              R0, [R1]
  219 0000014C 4932            LDR              R1, =Databuffer ;INITIALIZATION
                                                             Data Array Pointer
                                                             
  220 0000014E 4834            LDR              R0, =Dpt
  221 00000150 6001            STR              R1, [R0]
  222 00000152 4932            LDR              R1, =Timebuffer ;INITIALIZATION
                                                             Time Array Pointer
                                                             
  223 00000154 4833            LDR              R0, =Tpt
  224 00000156 6001            STR              R1, [R0]
  225 00000158 F7FF FFFE       BL               SysTick_Init ;TO SYSTIC SR
  226 0000015C F04F 0632       MOV              R6, #50
  227 00000160 F04F 32FF       MOV              R2, #0xFFFFFFFF
  228 00000164 492F            LDR              R1,=Tpt
  229 00000166 6808            LDR              R0, [R1]
  230 00000168         L1
  231 00000168 2E00            CMP              R6, #0
  232 0000016A D004            BEQ              fin1
  233 0000016C 6002            STR              R2, [R0]
  234 0000016E F100 0004       ADD              R0, #4
  235 00000172 3E01            SUBS             R6, #1
  236 00000174 E7F8            B                L1
  237 00000176         fin1
  238 00000176 F04F 0632       MOV              R6, #50
  239 0000017A F04F 02FF       MOV              R2, #0xFF
  240 0000017E 4928            LDR              R1, =Dpt
  241 00000180 6808            LDR              R0, [R1]
  242 00000182         L2
  243 00000182 2E00            CMP              R6, #0
  244 00000184 D004            BEQ              fin2
  245 00000186 7002            STRB             R2, [R0]
  246 00000188 F100 0001       ADD              R0, #1
  247 0000018C 3E01            SUBS             R6, #1
  248 0000018E E7F8            B                L2
  249 00000190         fin2
  250 00000190 E8BD 5000       POP              {R12, LR}
  251 00000194 4770            BX               LR          ;TO MAIN LOOP
  252 00000196         ;
  253 00000196         ;
  254 00000196         ;
  255 00000196         dataEntry                            ;DEBUG capture-----
                                                            -------------------
                                                            -----------
  256 00000196 F1BC 0F00       CMP              R12, #0     ;R12 = amount of ti
                                                            mes dataEntry shoul
                                                            d run w/out reset (
                                                            7 or 1)



ARM Macro Assembler    Page 9 


  257 0000019A D0CC            BEQ              back
  258 0000019C F1BC 0C01       SUBS             R12, #1
  259 000001A0 F1BB 0F32       CMP              R11, #50    ;R11 = index counte
                                                            r (if 50 then done)
                                                            
  260 000001A4 D0C7            BEQ              back
  261 000001A6 F10B 0B01       ADD              R11, #1
  262 000001AA 4919            LDR              R1, =GPIO_PORTE_DATA_R 
                                                            ;Loading PortE Data
                                                            
  263 000001AC 6808            LDR              R0, [R1]
  264 000001AE 4602            MOV              R2, R0      ;Data Manipulation
  265 000001B0 F002 0202       AND              R2, #0x02
  266 000001B4 EA4F 02C2       LSL              R2, #3
  267 000001B8 F000 0001       AND              R0, #0x01
  268 000001BC EA42 0200       ORR              R2, R2, R0  ;Final Value 
  269 000001C0 4917            LDR              R1, =Dpt    ;Storing in the Arr
                                                            ay R1=DPOINTER
  270 000001C2 6808            LDR              R0, [R1]    ;ADDRESS IN R0
  271 000001C4 6002            STR              R2, [R0]    ;VALUE IN R2
  272 000001C6 F100 0001       ADD              R0, #1      ;1 BECAUSE 8BIT (sh
                                                            ould it be 4 becaus
                                                            e register address 
                                                            is 32bit)
  273 000001CA 6008            STR              R0, [R1]    ;
  274 000001CC 4916            LDR              R1, =NVIC_ST_CURRENT_R ;systick
                                                             timer register 
  275 000001CE 680A            LDR              R2, [R1]    ;value into R2
  276 000001D0 4914            LDR              R1, =Tpt    ;Storing in the Arr
                                                            ay R1=TPOINTER
  277 000001D2 6808            LDR              R0, [R1]    ;ADDRESS IN R0
  278 000001D4 6002            STR              R2, [R0]    ;VALUE IN R2
  279 000001D6 F100 0004       ADD              R0, #4      ;4 BECAUSE 32BIT
  280 000001DA 6008            STR              R0, [R1]    ;Fin
  281 000001DC 4770            BX               LR          ;TO CHECK LOOP IN D
                                                            ATAENTRY
  282 000001DE         
  283 000001DE 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  284 000001E0                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              40025400 
              40025420 
              40024420 
              40025510 
              4002551C 
              4002451C 
              40024400 
              400243FC 
              400253FC 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 10 


              E000E018 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: DATA unused
Databuffer 00000000

Symbol: Databuffer
   Definitions
      At line 49 in file main.s
   Uses
      At line 213 in file main.s
      At line 219 in file main.s

Dpt 00000102

Symbol: Dpt
   Definitions
      At line 52 in file main.s
   Uses
      At line 220 in file main.s
      At line 240 in file main.s
      At line 269 in file main.s

Timebuffer 00000036

Symbol: Timebuffer
   Definitions
      At line 50 in file main.s
   Uses
      At line 216 in file main.s
      At line 222 in file main.s

Tpt 000000FE

Symbol: Tpt
   Definitions
      At line 51 in file main.s
   Uses
      At line 223 in file main.s
      At line 228 in file main.s
      At line 276 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: .text unused
Debug_Init 00000138

Symbol: Debug_Init
   Definitions
      At line 211 in file main.s
   Uses
      At line 111 in file main.s
Comment: Debug_Init used once
L1 00000168

Symbol: L1
   Definitions
      At line 230 in file main.s
   Uses
      At line 236 in file main.s
Comment: L1 used once
L2 00000182

Symbol: L2
   Definitions
      At line 242 in file main.s
   Uses
      At line 248 in file main.s
Comment: L2 used once
LEDOFF 000000B6

Symbol: LEDOFF
   Definitions
      At line 148 in file main.s
   Uses
      At line 118 in file main.s
      At line 192 in file main.s

LEDON 0000008C

Symbol: LEDON
   Definitions
      At line 124 in file main.s
   Uses
      At line 116 in file main.s
      At line 191 in file main.s

LOOP 000000A8

Symbol: LOOP
   Definitions
      At line 136 in file main.s
   Uses
      At line 142 in file main.s
Comment: LOOP used once
LOOP1 000000D2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: LOOP1
   Definitions
      At line 160 in file main.s
   Uses
      At line 166 in file main.s
Comment: LOOP1 used once
Start 00000000

Symbol: Start
   Definitions
      At line 60 in file main.s
   Uses
      At line 59 in file main.s
Comment: Start used once
back 00000136

Symbol: back
   Definitions
      At line 206 in file main.s
   Uses
      At line 204 in file main.s
      At line 257 in file main.s
      At line 260 in file main.s

buttoncheck 000000E0

Symbol: buttoncheck
   Definitions
      At line 172 in file main.s
   Uses
      At line 114 in file main.s
Comment: buttoncheck used once
change2 00000128

Symbol: change2
   Definitions
      At line 200 in file main.s
   Uses
      At line 198 in file main.s
Comment: change2 used once
check 000000F2

Symbol: check
   Definitions
      At line 180 in file main.s
   Uses
      At line 178 in file main.s
Comment: check used once
checkpoint 0000007A

Symbol: checkpoint
   Definitions
      At line 115 in file main.s
   Uses
      None
Comment: checkpoint unused
dataEntry 00000196




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: dataEntry
   Definitions
      At line 255 in file main.s
   Uses
      At line 117 in file main.s
      At line 119 in file main.s
      At line 183 in file main.s

delay 000000AC

Symbol: delay
   Definitions
      At line 138 in file main.s
   Uses
      At line 140 in file main.s
Comment: delay used once
delay1 000000D6

Symbol: delay1
   Definitions
      At line 162 in file main.s
   Uses
      At line 164 in file main.s
Comment: delay1 used once
done 00000118

Symbol: done
   Definitions
      At line 194 in file main.s
   Uses
      At line 190 in file main.s
Comment: done used once
fin1 00000176

Symbol: fin1
   Definitions
      At line 237 in file main.s
   Uses
      At line 232 in file main.s
Comment: fin1 used once
fin2 00000190

Symbol: fin2
   Definitions
      At line 249 in file main.s
   Uses
      At line 244 in file main.s
Comment: fin2 used once
here 000000FE

Symbol: here
   Definitions
      At line 184 in file main.s
   Uses
      At line 193 in file main.s
Comment: here used once
mainloop 00000076

Symbol: mainloop



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 112 in file main.s
   Uses
      At line 120 in file main.s
Comment: mainloop used once
next 000000B4

Symbol: next
   Definitions
      At line 143 in file main.s
   Uses
      At line 126 in file main.s
Comment: next used once
next1 000000DE

Symbol: next1
   Definitions
      At line 167 in file main.s
   Uses
      At line 150 in file main.s
Comment: next1 used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 127 in file main.s
      At line 151 in file main.s
      At line 173 in file main.s
      At line 185 in file main.s
      At line 262 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 94 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 97 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 82 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 76 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 131 in file main.s
      At line 155 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 79 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 70 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 88 in file main.s
Comment: GPIO_PORTF_PUR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 46 in file main.s
   Uses
      At line 274 in file main.s
Comment: NVIC_ST_CURRENT_R used once
SYSCTL_RCGCGPIO_R 400FE608



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 64 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 55 in file main.s
   Uses
      At line 225 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 62 in file main.s
Comment: TExaS_Init used once
2 symbols
378 symbols in table
